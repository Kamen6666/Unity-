设计模式和目的：

1）创建型模式： （单抽工建原）

类模式：工厂方法模式
对象模式：抽象工厂模式，建造者模式，原型模式，单例模式

建造者模式Builder：将一个复杂对象分解成为多个相对简单的部分，然后根据不同需要分别创建他们，最后构建复杂对象。
抽象工厂模式Abstract Factory：提供一个创建产品的接口。根据每个子类生产相关产品、
原型模式：



2）结构型模式: (桥代代适组享装外)
类模式：（类）适配器模式
对象模式：（对象）适配器模式，桥接模式，组合模式，装饰模式，外观模式，享元模式，代理模式

3）行为型模式：
类模式：解释器模式，模板方法模式
对象模式：职责链模式，命令模式，迭代器模式，中介模式，
        备忘录模式，观察者模式，状态模式，策略模式，访问者模式
        
        
        


















常用的设计模式主要是：
单利没送货i，观察者模式，迭代器模式，访问者模式等等

1）单例模式 ： 很简单，即保证一个类仅有一个实例，并且提供访问的全局访问点。
游戏中国，有两种类：
1）不继承MonoBehaiour
2)继承MonoBehaviour




2）观察者模式:

概念：将对象和对象之间创建依赖关系，当其中一个对象发生变化，将变化通过给其创建
关系的对象中，实现自动化的通知更新。


如：游戏开发中，UI上存在下拉List，选择的每一项都会导致UI变化

3）迭代器模式：

就拿c#迭代器为例。既可以了解迭代器模式概念，也可理解c#迭代器的实现。

迭代器模式作为行为模式的一个，本身是简化对象通讯和模式，非常容易理解和使用，
迭代器模式使得能够获取序列中所有元素而不关系类型是什么数据结构。

4）访问者模式：

希望对一个结构对象添加一个功能时，我们能够在不影响结构的前提下，定义一个新的对其元素的操作。




