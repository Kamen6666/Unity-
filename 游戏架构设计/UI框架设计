UI框架的设计：

UI框架用于管理场景中的所有面板，控制面板之间的切换，加快开发进度，提高代码质量。【主要在于管理面板】

实现思路：

1）进入状态：界面第一次动态加载被使用【】
2）暂停状态：切换到其他界面的时候
3）继续状态：重新回到界面的时候
4）退出状态：界面不显示的时候

实现步骤：
1）使用JSON保存面板路径，枚举保存面板类型
2）根据界面的四种状态，创建UI基类BasePanel,场景界面继承该类。将四种状态写作虚方法，
分别为OnEnter(),OnPause(),OnResume(),OnExit()
3)通过管理类UIManager,解析JSON，管理UI界面的加载和切换。方便调用，做成单例模式，
分别从两个字典保存从JSON读取面板信息和已动态加载实例化的面板，通过栈实现面板之间的切换。


缺点明显，使用栈用来存储场景中依次打开的界面，只能够依次从栈顶界面开始关闭。

OnEnter()->OnPause()->OnResume()->OnExit()

UI框架类图： 
UIPanelType :存储面板路径和类型
UIManager : 
  panelPathDict:Dictionary<UIPanelType,String>
  panelDict:Dictionary<UIPanelType,BasePanel>
  panelStack:Stack<BasePanel>

BasePanel:


          
