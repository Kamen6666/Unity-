类成员包括变量和方法,希望其他类访问成员变量，则定义为共有public,那么这个成员变量就可随意访问，但是不利于数据安全性。

c#通过属性特性读取和写入字段【成员变量】，而非直接读取和写入，借此提供对类中字段的保护。

属性作为c#面相对象技术中封装性的体现。

属性和字段的区别：
1）属性作为逻辑字段，是字段的扩展，不占用实际的内存
2）属性可以被其他类访问，而非public字段不能直接访问
3）属性可以对接受的数据在范围上做限定，但是字段不能

使用属性的情况：
1）要求字段只读或只写
2）需要限制字段取值范围
3）在改变一个字段的值时希望改变对象的其他状态


使用字段的情况：
1）允许自由读写
2）取值范围只受到数据类型约束而无其他任何限制
3）值变动不引发类中其他成员的变化


设计字段是为了便于内部方法使用，而尽量与外界隔绝；
设计属性考虑的是方便外界的使用，但是不让外界知道的数据一律不给。
